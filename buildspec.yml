#This buildspec.yml file is run during the CodeBuild section of the AWS CodePipeline
version: 0.2
#Retrieves secrets from SecretManager and sets them as enviornment variables
env:
  secrets-manager:
    LOGIN: prod/sonar:SONARTOKEN
    HOST: prod/sonar:HOST
    ORG: prod/sonar:ORG
    PROJECT: prod/sonar:PROJECT
phases:
#installs the dotnet runtime version using the latest release of version 6
  install:
    runtime-versions:
      dotnet: 6.x
  pre_build:
    commands:
    #Updates Advanced Package Tool library
      - apt-get update
    #Installs jq, used for command line based JSON processing
      - apt-get install -y jq
    #Makes call to download the sonar scanner cli
      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
      - dotnet tool install --global dotnet-sonarscanner
      - dotnet tool install --global coverlet.console
    #unzips the sonar scanner cli and exports it as a path variable
      - sh $pwd
      - unzip ./sonar-scanner-cli-4.7.0.2747-linux.zip
      - ls $pwd
      - export PATH=$PATH:./sonar-scanner-4.7.0.2747-linux/bin/
  build:
    commands: 
    #builds a tests the project
      - dotnet build
      - dotnet test
    #runs the sonar scanner cli and logs in to org account using evniornment variables
      
    #packages and exports the results of the sonar scanner into results.json and sends that to the sonar org
      

      - dotnet sonarscanner begin 
        /k:"$PROJECT"
        /d:sonar.login="$LOGIN"
        /d:sonar.cs.opencover.reportsPaths=coverage.xml
      - dotnet build --no-incremental
      - coverlet .\CovExample.Tests\bin\Debug\net6.0\CovExample.Tests.dll
        --target "dotnet" 
        --targetargs "test --no-build"
        -f=opencover 
        -o="coverage.xml"
      - dotnet sonarscanner end /d:sonar.login="$LOGIN"
      - sonar-scanner -Dsonar.login=$LOGIN -Dsonar.host.url=$HOST -Dsonar.projectKey=$PROJECT -Dsonar.organization=$ORG
      - sleep 5

      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$PROJECT >result.json
      - cat result.json

      - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi